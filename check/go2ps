#!/usr/bin/perl -w
#############################################################################
#                                   go2ps                                   #
$VERSION = "version 0.2";    						    #
#                                                                           #
#                             By Dennis Lavrov                              #
#                        last modified 03/18/2009,                          #
#############################################################################

use strict;
use warnings;
my $atp_color = "1 0.8 0.67";
my $cob_color = "0.71 0.67 1";
my $cox_color = "0.67 0.96 1";
my $nad_color = "0.71 1 0.67";
my $rrna_color = "0.95 1 0.56";
my $tRNA_color = ".97 0.78 1";
my $other_color = "1 0 0";
my $left_margin=50; #initial $x ##was 72
my $top_margin=720; #initial $y
my $prot_rrna_length = 20;
my $tRNA_length = 8;
my $hight = 16; #10;
die "Usage: go2ps <gene order file in GO format> [> outfile]\n" unless $ARGV[0];

my $species_name="";
my $gene_order="";
my $y=$top_margin;
print "%!PS\n
/cp {closepath} bind def
/slw {setlinewidth} bind def
/m {newpath moveto} bind def
/rl {rlineto} bind def
/gs {gsave} bind def
/gr {grestore} bind def
/s {stroke} bind def
/sf {setrgbcolor fill} bind def
/sc {scalefont} bind def

% Build a large box
/lbox {
    0.5 setlinewidth
    newpath
    moveto
    $prot_rrna_length 0 rlineto
    0 $hight rlineto
    -$prot_rrna_length 0 rlineto
    closepath
    %stroke
} def

% Build a small box
/sbox {
    0.5 setlinewidth
    newpath
    moveto
    $tRNA_length 0 rlineto
    0 $hight rlineto
    -$tRNA_length 0 rlineto
    closepath
    %stroke
} def \n";

while (<>) {
	chomp;
	if (/^\s*;/ or /^\s*$/) { next;}
	elsif (/^>\S+/ and $species_name eq "") {
		s/^>(\w+)/$1/;
		$species_name = $_;
		next;
	}
	elsif ($species_name and $gene_order eq "") {
		$gene_order = $_;
	}
	else {
		die "Wrong file format: $_\n";
	}
	####
	if ($y<92) {
		print "showpage\n";
		$y = $top_margin;
	}
	my $x=$left_margin;
	print_species_name ($x, $y, $species_name);
	$y -= 20; #12;
	$x=$left_margin;
	my @all_genes = split (" ",$gene_order);
	foreach my $gene(@all_genes) {
		($x,$y) = draw_next_gene ($x, $y, $gene);
	}
	$y -= 16; #10;
	$species_name ="";
	$gene_order ="";
	
}

sub draw_next_gene {
	my ($x, $y, $gene) = @_;
	my $reverse = 1 if ($gene =~ /^-\w+/);
	$gene =~ s/^[-\+](\w+)/$1/;
	my $color = $other_color;
	my $length = $prot_rrna_length;
	my $tRNA_gene = 0;
	if ($gene =~ /^trn/) {
		$tRNA_gene = 1;
		$color =$tRNA_color;
		$length = $tRNA_length;
		#replacing anticodons by numbers
		if ($gene =~ /trnL\(uag\)/) {
			$gene = "L1";
		}
		elsif ($gene =~ /trnL\(uaa\)/) {
			$gene = "L2";
		}
		elsif ($gene =~ /trnS\(gcu\)/) {
			$gene = "S1";
		}
		elsif ($gene =~ /trnS\(uga\)/) {
			$gene = "S2";
		}
		elsif ($gene =~ /trnI\(cau\)/) {
			$gene = "I2";
		}
		else {
			$gene =~ s/trn(.).*/$1/;
		}
	}
	
	elsif ($gene =~ /atp/) {
		$color = $atp_color;
	}
	elsif ($gene =~ /cob/) {
		$color = $cob_color;
	}
	elsif ($gene =~ /cox/) {
		$color = $cox_color;
	}
	elsif ($gene =~ /nad/) {
		$color = $nad_color;
	}
	elsif ($gene =~ /^rn/) {
		$color = $rrna_color;
	}
	if ($reverse) {
		print "3.0 slw
		$x $y m
		$length 0 rl
		s\n\n";
	}
	if ($tRNA_gene) {
		print "$x $y sbox\n";
	}
	else {
		print "$x $y lbox\n";
	}
	print "gs
	$color sf
	gr
	s\n";
        my $gene_name_length = length ($gene);
        my $text_x = $x+2;
        if ($gene_name_length == 1) {    #tRNA genes
                $text_x = $x + 1; #2
        }
        elsif ($gene_name_length == 2) {    #tRNA genes with letter
                $text_x = $x+1;
        }
        elsif ($gene_name_length == 3) { #rns, rnl, cob
                $text_x = $x + 4; #6
        }
        elsif ($gene_name_length == 4) { #most genes
                $text_x = $x + 2; #4
        }
        elsif ($gene_name_length == 5) {
                $text_x = $x + 1; #2
        }
        else {
               $text_x = $x+1;
       }
	my $text_y = $y+6; #3;	
	# font 6
	print "/Times-BoldItalic findfont 
	8 sc
	setfont 
	$text_x $text_y moveto 
	($gene) show\n\n";
	
	$x=$x+$length;
	return ($x, $y);
}

sub print_species_name { #font 8
	my ($x, $y, $species_name) = @_;
print "/Times-BoldItalic findfont 
10 sc
setfont 
$x $y m
($species_name) show\n\n";
}
	
